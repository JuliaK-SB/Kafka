<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="14229550-2847-42a8-a665-3ce2ac8a66b0" created="3.7.0-SNAPSHOT" activeEnvironment="Default environment" name="Kafka sample project" updated="3.20.1" encryptionMode="Not encrypted" resourceRoot="" compositeProjectFormat="1.3" xmlns:con="http://eviware.com/soapui/config">
  <con:description>This project uses docker compose file. This file is located in the same directory as this project file. You may need to run it via the following command from command line:  docker-compose -f docker-compose.yml up</con:description>
  <con:settings/>
  <con:requirements/>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
    // This code is often used for adding custom authentication to ReadyAPI functional tests

    // If hardcoding the token, uncomment and change line 5
    // token = '4567'

    // If your token is parameterized in Project level custom property, uncomment line 8
    // token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

    // To modify all outgoing calls, remove comments from lines 11 to 16
    // headers = request.requestHeaders
    // if (headers.containsKey('auth_token2') == false) {
    //   headers.put('auth_token2', token)
    //   request.requestHeaders = headers
    // }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
    // Change the directory path in line 5 to a location where you want to store details
    // then uncomment lines 5 to 10

    // filePath = 'C:\\tempOutputDirectory\\'
    // fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
    // pw = new java.io.PrintWriter(fos)
    // testStepResult.writeTo(pw)
    // pw.close()
    // fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
  <con:kafkaConnectionSettingsContainer>
    <con:connectionSettings id="b5ba060d-2d83-4f16-bcef-2686e1368770">
      <con:subscribeProperties/>
      <con:publishProperties/>
      <con:schemaRegistry>
        <con:url/>
        <con:authProfile>No Authorization</con:authProfile>
      </con:schemaRegistry>
      <con:closeConditionType>ANY_CONDITION</con:closeConditionType>
      <con:maxIdleTime>60</con:maxIdleTime>
      <con:maxMessagesReceived>50</con:maxMessagesReceived>
      <con:maxRunTime>60</con:maxRunTime>
    </con:connectionSettings>
    <con:connectionSettings id="2a96f426-53f0-47be-b1cc-fdfe1a5d07d0">
      <con:subscribeProperties/>
      <con:publishProperties/>
      <con:schemaRegistry>
        <con:url/>
        <con:authProfile>No Authorization</con:authProfile>
      </con:schemaRegistry>
      <con:closeConditionType>ANY_CONDITION</con:closeConditionType>
      <con:maxIdleTime>60</con:maxIdleTime>
      <con:maxMessagesReceived>50</con:maxMessagesReceived>
      <con:maxRunTime>60</con:maxRunTime>
    </con:connectionSettings>
  </con:kafkaConnectionSettingsContainer>
</con:soapui-project>
